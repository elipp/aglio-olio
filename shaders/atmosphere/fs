#version 410 core

layout (location = 0) in vec3 WorldPos_FS_in;
layout (location = 1) in vec3 Normal_FS_in;
layout (location = 2) in vec2 TexCoord_FS_in; 

layout(location = 0) out vec4 out_frag_color;

uniform mat4 ModelView;

mat3 ModelView3_inv_T = inverse(transpose(mat3(ModelView)));	//upper 3x3

void main(void)
{
	vec3 Normal_transformed = normalize(ModelView3_inv_T * Normal_FS_in);

	const vec3 eyeLookVec = vec3(0.0, 0.0, -1.0);	// we're doing lighting calculations in eye-space now
	float cos_angle = dot(eyeLookVec, Normal_transformed);	// the length for both of the vectors is 1, so no need to divide
	float sqrt_cos = sqrt(abs(cos_angle));
	
	float a = 0.001;
	if (sqrt_cos < 0.3) {
		out_frag_color = vec4(0.5,0.5,0.8, sin(cos_angle - a)/pow(cos_angle-a, 2));
	}
	else {
		discard;
	}

}
