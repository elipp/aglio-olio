#version 410 core

layout (location = 0) in vec3 Position_VS_in;
layout (location = 1) in vec3 Normal_VS_in;
layout (location = 2) in vec2 TexCoord_VS_in;

uniform float running;
uniform mat4 ModelView;
uniform mat4 Projection;

uniform sampler2D texture_color;
uniform sampler2D heightmap;

layout (location = 0) out vec3 WorldPos_CS_in;	// use location-based data passing; names dont have to match exactly this way ^^
layout (location = 1) out vec3 Normal_CS_in;
layout (location = 2) out vec2 TexCoord_CS_in;

mat3 normal_matrix = transpose(inverse(mat3(ModelView)));
//mat3 normal_matrix = transpose(inverse(mat3(ModelView)));

void main(void)
{
	
	//float height_sample = length(texture2D(heightmap, vec2(TexCoord_VS_in.s, TexCoord_VS_in.t + 0.5)));
	vec3 normal_normalized = normalize(Normal_VS_in);

	WorldPos_CS_in = ModelView*vec4(Position_VS_in, 1.0);
	Normal_CS_in = normal_matrix*Normal_VS_in; 
	TexCoord_CS_in = TexCoord_VS_in;
}

